name: deploy/prod

on:
  pull_request:
    branches:
      - develop
  # release:
  #   types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Add your deployment process here; personally I deploy it to a DigitalOcean droplet
      - name: Logs in to DigitalOcean droplet and deploy changes
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            nvm install 16.13.0
            pm2 stop nino
            pm2 delete nino
            cd nino
            git restore .
            git clean -f
            git checkout develop
            git pull
            git fetch --tags
            git branch | grep -v "develop" | xargs git branch -D            
            git checkout tags/${{ github.ref_name }} -b prod/${{ github.ref_name }}
            echo "${{ secrets.ENVIRONMENT_PROD }}" > src/config/environment.ts
            echo "${{ secrets.DATABASE_PROD }}" > src/config/database.ts
            yarn update:version
            yarn install
            yarn build
            pm2 start deploy.config.js --env prod

      - name: Send notification to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_NOTIFICATION_WEBHOOK }}
          DISCORD_USERNAME: 'My App Release Notification'
          DISCORD_AVATAR: ''
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'Successfully deployed `${{ github.ref_name }}` to production'
